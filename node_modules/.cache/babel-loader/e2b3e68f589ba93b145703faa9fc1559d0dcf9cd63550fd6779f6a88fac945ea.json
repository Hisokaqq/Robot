{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrburtyn/Desktop/Projects/3drobot/src/components/Robot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useRef } from 'react';\nimport { useGLTF, useScroll } from '@react-three/drei';\nimport { gsap } from 'gsap';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Robot = props => {\n  _s();\n  const {\n    nodes,\n    materials\n  } = useGLTF('./models/robot/robot/scene-transformed.glb');\n  const robotRef = useRef();\n  const scroll = useScroll();\n  const tl = useRef();\n  useFrame((state, delta) => {\n    tl.current.seek(scroll.offset * tl.current.duration());\n  }, []);\n  useLayoutEffect(() => {\n    tl.current = gsap.timeline({\n      defaults: {\n        duration: 10,\n        ease: 'power1.inOut'\n      }\n    });\n    tl.current.to(robotRef.current.rotation, {\n      y: -1\n    }, 0).to(robotRef.current.position, {\n      x: 1\n    }, 0).to(robotRef.current.rotation, {\n      y: 1\n    }, 4).to(robotRef.current.position, {\n      x: -1\n    }, 4).to(robotRef.current.rotation, {\n      y: 0\n    }, 8).to(robotRef.current.rotation, {\n      x: 1\n    }, 8).to(robotRef.current.position, {\n      x: 0\n    }, 8).to(robotRef.current.rotation, {\n      y: 0\n    }, 10).to(robotRef.current.rotation, {\n      x: -1\n    }, 10).to(robotRef.current.position, {\n      x: 0\n    }, 10).to(robotRef.current.rotation, {\n      y: 0\n    }, 14).to(robotRef.current.rotation, {\n      x: 0\n    }, 14).to(robotRef.current.position, {\n      x: 0\n    }, 14).to(robotRef.current.rotation, {\n      y: 0\n    }, 18).to(robotRef.current.rotation, {\n      x: 0\n    }, 18).to(robotRef.current.position, {\n      x: 0\n    }, 18);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ...props,\n    dispose: null,\n    ref: robotRef,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.Object_4.geometry,\n      material: materials['medbot.003'],\n      rotation: [0, Math.PI * 3 / 2, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Robot, \"Lto82iPHY+DxM0+mVG1+Y9XHeu8=\", false, function () {\n  return [useGLTF, useScroll, useFrame];\n});\n_c = Robot;\nexport default Robot;\nuseGLTF.preload('./models/robot/robot/scene-transformed.glb');\nvar _c;\n$RefreshReg$(_c, \"Robot\");","map":{"version":3,"names":["React","useLayoutEffect","useRef","useGLTF","useScroll","gsap","useFrame","jsxDEV","_jsxDEV","Robot","props","_s","nodes","materials","robotRef","scroll","tl","state","delta","current","seek","offset","duration","timeline","defaults","ease","to","rotation","y","position","x","dispose","ref","children","geometry","Object_4","material","Math","PI","fileName","_jsxFileName","lineNumber","columnNumber","_c","preload","$RefreshReg$"],"sources":["/Users/oleksandrburtyn/Desktop/Projects/3drobot/src/components/Robot.jsx"],"sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport { useGLTF, useScroll } from '@react-three/drei';\nimport { gsap } from 'gsap';\nimport { useFrame } from '@react-three/fiber';\n\nconst Robot = (props) => {\n  const { nodes, materials } = useGLTF('./models/robot/robot/scene-transformed.glb');\n  const robotRef = useRef();\n  const scroll = useScroll();\n  const tl = useRef();\n\n  useFrame((state, delta) => {\n    tl.current.seek(scroll.offset * tl.current.duration());\n  }, []);\n\n  useLayoutEffect(() => {\n    tl.current = gsap.timeline({ defaults: { duration: 10, ease: 'power1.inOut' } });\n    tl.current\n      .to(robotRef.current.rotation, { y: -1 }, 0)\n      .to(robotRef.current.position, { x: 1 }, 0)\n\n      .to(robotRef.current.rotation, { y: 1 }, 4)\n      .to(robotRef.current.position, { x: -1 }, 4)\n\n      .to(robotRef.current.rotation, { y: 0 }, 8)\n      .to(robotRef.current.rotation, { x: 1 }, 8)\n      .to(robotRef.current.position, { x: 0 }, 8)\n\n      .to(robotRef.current.rotation, { y: 0 }, 10)\n      .to(robotRef.current.rotation, { x: -1 }, 10)\n      .to(robotRef.current.position, { x: 0 }, 10)\n\n      .to(robotRef.current.rotation, { y: 0 }, 14)\n      .to(robotRef.current.rotation, { x: 0 }, 14)\n      .to(robotRef.current.position, { x: 0 }, 14)\n\n      .to(robotRef.current.rotation, { y: 0 }, 18)\n      .to(robotRef.current.rotation, { x: 0 }, 18)\n      .to(robotRef.current.position, { x: 0 }, 18);\n  }, []);\n\n  return (\n    <group {...props} dispose={null} ref={robotRef}>\n      <mesh geometry={nodes.Object_4.geometry} material={materials['medbot.003']} rotation={[0, Math.PI * 3 / 2, 0]} />\n    </group>\n  );\n};\n\nexport default Robot;\nuseGLTF.preload('./models/robot/robot/scene-transformed.glb');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}